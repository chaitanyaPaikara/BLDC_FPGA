////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : Main.vf
// /___/   /\     Timestamp : 06/16/2017 16:56:46
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog "C:/Users/Chaitanya Paikara/Documents/GitHub/BLDC_Motor_FPGA/UART_1_1/Main.vf" -w "C:/Users/Chaitanya Paikara/Documents/GitHub/BLDC_Motor_FPGA/UART_1_1/Main.sch"
//Design Name: Main
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module sub_part_MUSER_Main(CLK, 
                           current_vel, 
                           EN, 
                           KpKd, 
                           target_vel, 
                           out_vel);

    input CLK;
    input [8:0] current_vel;
    input EN;
    input [7:0] KpKd;
    input [7:0] target_vel;
   output [7:0] out_vel;
   
   wire [8:0] XLXN_2;
   
   PID_NEXT  XLXI_3 (.CLK(CLK), 
                    .in_vel(XLXN_2[8:0]), 
                    .out_vel(out_vel[7:0]), 
                    .ovf());
   PIDCONTROLLER  XLXI_4 (.clk(CLK), 
                         .current_vel(current_vel[8:0]), 
                         .en(EN), 
                         .KpKd(KpKd[7:0]), 
                         .target_vel(target_vel[7:0]), 
                         .vel_output(XLXN_2[8:0]));
endmodule
`timescale 1ns / 1ps

module Main(CLK, 
            CLR, 
            CLR_Rx, 
            E_1, 
            E_2, 
            H1, 
            H2, 
            H3, 
            KpKd, 
            Rx, 
            A, 
            AA, 
            B, 
            BB, 
            C, 
            CC, 
            Data_Rx, 
            OUT_ser);

    input CLK;
    input CLR;
    input CLR_Rx;
    input E_1;
    input E_2;
    input H1;
    input H2;
    input H3;
    input [7:0] KpKd;
    input Rx;
   output A;
   output AA;
   output B;
   output BB;
   output C;
   output CC;
   output [8:0] Data_Rx;
   output OUT_ser;
   
   wire XLXN_76;
   wire XLXN_83;
   wire [7:0] XLXN_85;
   wire [7:0] XLXN_86;
   wire [8:0] Data_Rx_DUMMY;
   
   assign Data_Rx[8:0] = Data_Rx_DUMMY[8:0];
   Sync_Reciver  XLXI_5 (.CLK(CLK), 
                        .CLK_Baud(XLXN_76), 
                        .CLR(CLR_Rx), 
                        .Serial_input(Rx), 
                        .Data(XLXN_86[7:0]), 
                        .Data_Ready(), 
                        .Parity_ERR());
   Main_Module  XLXI_49 (.CLK(CLK), 
                        .E_1(E_1), 
                        .E_2(E_2), 
                        .RST_1(), 
                        .Ticks(Data_Rx_DUMMY[8:0]));
   MAIN_2  XLXI_51 (.CLK(CLK), 
                   .D(XLXN_85[7:0]), 
                   .H1(H1), 
                   .H2(H2), 
                   .H3(H3), 
                   .A(A), 
                   .AA(AA), 
                   .B(B), 
                   .BB(BB), 
                   .C(C), 
                   .CC(CC));
   sub_part_MUSER_Main  XLXI_52 (.CLK(CLK), 
                                .current_vel(Data_Rx_DUMMY[8:0]), 
                                .EN(XLXN_83), 
                                .KpKd(KpKd[7:0]), 
                                .target_vel(XLXN_86[7:0]), 
                                .out_vel(XLXN_85[7:0]));
   VCC  XLXI_54 (.P(XLXN_83));
   Sync_Transmitter_Baud  XLXI_56 (.CLK(CLK), 
                                  .CLR(CLR), 
                                  .Data(XLXN_85[7:0]), 
                                  .RST(), 
                                  .CLK_Baud(XLXN_76), 
                                  .OUT_ser(OUT_ser));
endmodule
