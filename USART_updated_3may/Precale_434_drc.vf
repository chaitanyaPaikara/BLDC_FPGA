////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : Precale_434_drc.vf
// /___/   /\     Timestamp : 05/08/2015 23:19:47
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.2\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family spartan3e -verilog Precale_434_drc.vf -w E:/FPGA_Xilinx/USART_updated_3may/Precale_434.sch
//Design Name: Precale_434
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FTC_MXILINX_Precale_434(C, 
                               CLR, 
                               T, 
                               Q);

   parameter INIT = 1'b0;
   
    input C;
    input CLR;
    input T;
   output Q;
   
   wire TQ;
   wire Q_DUMMY;
   
   assign Q = Q_DUMMY;
   XOR2  I_36_32 (.I0(T), 
                 .I1(Q_DUMMY), 
                 .O(TQ));
   (* RLOC = "X0Y0" *) 
   FDC  I_36_35 (.C(C), 
                .CLR(CLR), 
                .D(TQ), 
                .Q(Q_DUMMY));
endmodule
`timescale 1ns / 1ps

module AND9_MXILINX_Precale_434(I0, 
                                I1, 
                                I2, 
                                I3, 
                                I4, 
                                I5, 
                                I6, 
                                I7, 
                                I8, 
                                O);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
    input I8;
   output O;
   
   wire dummy;
   wire S0;
   wire S1;
   wire O_DUMMY;
   
   assign O = O_DUMMY;
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_29 (.I1(I0), 
                 .I2(I1), 
                 .I3(I2), 
                 .I4(I3), 
                 .O(S0));
   AND4  I_36_110 (.I0(I0), 
                  .I1(I1), 
                  .I2(I2), 
                  .I3(I3), 
                  .O(S0));
   AND4  I_36_127 (.I0(I4), 
                  .I1(I5), 
                  .I2(I6), 
                  .I3(I7), 
                  .O(S1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_138 (.I1(I4), 
                  .I2(I5), 
                  .I3(I6), 
                  .I4(I7), 
                  .O(S1));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_142 (.I1(S0), 
                  .I2(S1), 
                  .I3(I8), 
                  .I4(dummy), 
                  .O(O_DUMMY));
   AND3  I_36_176 (.I0(S0), 
                  .I1(S1), 
                  .I2(I8), 
                  .O(O_DUMMY));
endmodule
`timescale 1ns / 1ps

module Incrementer_Decrementer_MUSER_Precale_434(add_0, 
                                                 I_0, 
                                                 I_1, 
                                                 I_2, 
                                                 I_3, 
                                                 I_4, 
                                                 I_5, 
                                                 I_6, 
                                                 I_7, 
                                                 I_8, 
                                                 O_0, 
                                                 O_1, 
                                                 O_2, 
                                                 O_3, 
                                                 O_4, 
                                                 O_5, 
                                                 O_6, 
                                                 O_7, 
                                                 O_8);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_59;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_73;
   wire XLXN_74;
   wire XLXN_75;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_5 (.I0(add_0), 
                .I1(I_5), 
                .O(XLXN_1));
   XOR2  XLXI_6 (.I0(add_0), 
                .I1(I_6), 
                .O(XLXN_62));
   XOR2  XLXI_7 (.I0(add_0), 
                .I1(I_7), 
                .O(XLXN_5));
   XOR2  XLXI_8 (.I0(add_0), 
                .I1(I_4), 
                .O(XLXN_59));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_11 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_68));
   XOR2  XLXI_12 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_69));
   XOR2  XLXI_13 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_70));
   XOR2  XLXI_14 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_67));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_17 (.I0(XLXN_62), 
                 .I1(XLXN_46), 
                 .O(XLXN_75));
   AND2  XLXI_18 (.I0(XLXN_1), 
                 .I1(XLXN_47), 
                 .O(XLXN_46));
   AND2  XLXI_19 (.I0(XLXN_59), 
                 .I1(XLXN_48), 
                 .O(XLXN_47));
   AND2  XLXI_20 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_48));
   AND2  XLXI_21 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
   XOR2  XLXI_42 (.I0(add_0), 
                 .I1(XLXN_67), 
                 .O(O_4));
   XOR2  XLXI_43 (.I0(add_0), 
                 .I1(XLXN_68), 
                 .O(O_7));
   XOR2  XLXI_44 (.I0(add_0), 
                 .I1(XLXN_69), 
                 .O(O_6));
   XOR2  XLXI_45 (.I0(add_0), 
                 .I1(XLXN_70), 
                 .O(O_5));
   XOR2  XLXI_46 (.I0(add_0), 
                 .I1(XLXN_71), 
                 .O(O_8));
   XOR2  XLXI_48 (.I0(XLXN_74), 
                 .I1(XLXN_73), 
                 .O(XLXN_71));
   AND2  XLXI_49 (.I0(XLXN_5), 
                 .I1(XLXN_75), 
                 .O(XLXN_73));
   XOR2  XLXI_50 (.I0(add_0), 
                 .I1(I_8), 
                 .O(XLXN_74));
endmodule
`timescale 1ns / 1ps

module Flip_flip9_MUSER_Precale_434(CE, 
                                    C_0, 
                                    I_0, 
                                    I_1, 
                                    I_2, 
                                    I_3, 
                                    I_4, 
                                    I_5, 
                                    I_6, 
                                    I_7, 
                                    I_8, 
                                    RST, 
                                    O_0, 
                                    O_1, 
                                    O_2, 
                                    O_3, 
                                    O_4, 
                                    O_5, 
                                    O_6, 
                                    O_7, 
                                    O_8);

    input CE;
    input C_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
    input RST;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_5), 
                 .Q(O_5));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_4), 
                 .Q(O_4));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_15 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_16 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_17 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_0), 
                 .Q(O_0));
   FDCE #( .INIT(1'b0) ) XLXI_18 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_8), 
                 .Q(O_8));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_7), 
                 .Q(O_7));
   FDCE #( .INIT(1'b0) ) XLXI_20 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_6), 
                 .Q(O_6));
endmodule
`timescale 1ns / 1ps

module Precale_434(CLK, 
                   CLK_O);

    input CLK;
   output CLK_O;
   
   wire RST;
   wire TICK0;
   wire TICK1;
   wire TICK2;
   wire TICK3;
   wire TICK4;
   wire TICK5;
   wire TICK6;
   wire TICK7;
   wire TICK8;
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_39;
   wire XLXN_42;
   wire XLXN_46;
   wire XLXN_48;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_57;
   wire XLXN_58;
   
   Flip_flip9_MUSER_Precale_434  XLXI_3 (.CE(XLXN_52), 
                                        .C_0(CLK), 
                                        .I_0(XLXN_2), 
                                        .I_1(XLXN_4), 
                                        .I_2(XLXN_6), 
                                        .I_3(XLXN_8), 
                                        .I_4(XLXN_10), 
                                        .I_5(XLXN_11), 
                                        .I_6(XLXN_14), 
                                        .I_7(XLXN_12), 
                                        .I_8(XLXN_13), 
                                        .RST(RST), 
                                        .O_0(TICK0), 
                                        .O_1(TICK1), 
                                        .O_2(TICK2), 
                                        .O_3(TICK3), 
                                        .O_4(TICK4), 
                                        .O_5(TICK5), 
                                        .O_6(TICK6), 
                                        .O_7(TICK7), 
                                        .O_8(TICK8));
   Incrementer_Decrementer_MUSER_Precale_434  XLXI_4 (.add_0(XLXN_53), 
                                                     .I_0(TICK0), 
                                                     .I_1(TICK1), 
                                                     .I_2(TICK2), 
                                                     .I_3(TICK3), 
                                                     .I_4(TICK4), 
                                                     .I_5(TICK5), 
                                                     .I_6(TICK6), 
                                                     .I_7(TICK7), 
                                                     .I_8(TICK8), 
                                                     .O_0(XLXN_2), 
                                                     .O_1(XLXN_4), 
                                                     .O_2(XLXN_6), 
                                                     .O_3(XLXN_8), 
                                                     .O_4(XLXN_10), 
                                                     .O_5(XLXN_11), 
                                                     .O_6(XLXN_14), 
                                                     .O_7(XLXN_12), 
                                                     .O_8(XLXN_13));
   (* HU_SET = "XLXI_5_0" *) 
   AND9_MXILINX_Precale_434  XLXI_5 (.I0(TICK0), 
                                    .I1(XLXN_58), 
                                    .I2(XLXN_57), 
                                    .I3(TICK3), 
                                    .I4(TICK4), 
                                    .I5(XLXN_42), 
                                    .I6(TICK6), 
                                    .I7(TICK7), 
                                    .I8(XLXN_39), 
                                    .O(RST));
   INV  XLXI_6 (.I(TICK8), 
               .O(XLXN_39));
   INV  XLXI_13 (.I(TICK5), 
                .O(XLXN_42));
   (* HU_SET = "XLXI_14_1" *) 
   FTC_MXILINX_Precale_434 #( .INIT(1'b0) ) XLXI_14 (.C(RST), 
                                    .CLR(XLXN_48), 
                                    .T(XLXN_46), 
                                    .Q(CLK_O));
   VCC  XLXI_15 (.P(XLXN_46));
   GND  XLXI_17 (.G(XLXN_48));
   VCC  XLXI_18 (.P(XLXN_52));
   GND  XLXI_19 (.G(XLXN_53));
   INV  XLXI_20 (.I(TICK1), 
                .O(XLXN_58));
   INV  XLXI_21 (.I(TICK2), 
                .O(XLXN_57));
endmodule
