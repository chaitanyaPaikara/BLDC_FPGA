////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : decade_counter.vf
// /___/   /\     Timestamp : 05/03/2015 22:59:12
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog D:/xilinx_fpga/USART_updated_3may/decade_counter.vf -w D:/xilinx_fpga/USART_updated_3may/decade_counter.sch
//Design Name: decade_counter
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Reg_4bit_MUSER_decade_counter(CE, 
                                     CLEAR, 
                                     CLOCK, 
                                     I_0, 
                                     I_1, 
                                     I_2, 
                                     I_3, 
                                     O_0, 
                                     O_1, 
                                     O_2, 
                                     O_3);

    input CE;
    input CLEAR;
    input CLOCK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_11 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_0), 
                 .Q(O_0));
endmodule
`timescale 1ns / 1ps

module Add_sub_4bit_MUSER_decade_counter(add_0, 
                                         I_0, 
                                         I_1, 
                                         I_2, 
                                         I_3, 
                                         O_0, 
                                         O_1, 
                                         O_2, 
                                         O_3);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_34 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
endmodule
`timescale 1ns / 1ps

module decade_counter(CE, 
                      CLEAR, 
                      CLK, 
                      OUT_f);

    input CE;
    input CLEAR;
    input CLK;
   output OUT_f;
   
   wire OUT_1;
   wire XLXN_1;
   wire XLXN_11;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_66;
   wire XLXN_73;
   wire OUT_f_DUMMY;
   
   assign OUT_f = OUT_f_DUMMY;
   Add_sub_4bit_MUSER_decade_counter  XLXI_1 (.add_0(XLXN_1), 
                                             .I_0(OUT_1), 
                                             .I_1(XLXN_48), 
                                             .I_2(XLXN_49), 
                                             .I_3(XLXN_11), 
                                             .O_0(XLXN_43), 
                                             .O_1(XLXN_44), 
                                             .O_2(XLXN_45), 
                                             .O_3(XLXN_47));
   Reg_4bit_MUSER_decade_counter  XLXI_2 (.CE(CE), 
                                         .CLEAR(CLEAR), 
                                         .CLOCK(XLXN_66), 
                                         .I_0(XLXN_43), 
                                         .I_1(XLXN_44), 
                                         .I_2(XLXN_45), 
                                         .I_3(XLXN_47), 
                                         .O_0(OUT_1), 
                                         .O_1(XLXN_48), 
                                         .O_2(XLXN_49), 
                                         .O_3(XLXN_11));
   GND  XLXI_3 (.G(XLXN_1));
   AND2  XLXI_7 (.I0(CLK), 
                .I1(XLXN_73), 
                .O(XLXN_66));
   NAND4  XLXI_8 (.I0(XLXN_18), 
                 .I1(XLXN_48), 
                 .I2(XLXN_17), 
                 .I3(XLXN_11), 
                 .O(OUT_f_DUMMY));
   INV  XLXI_10 (.I(OUT_1), 
                .O(XLXN_18));
   INV  XLXI_12 (.I(XLXN_49), 
                .O(XLXN_17));
   OR2  XLXI_20 (.I0(OUT_f_DUMMY), 
                .I1(CLEAR), 
                .O(XLXN_73));
endmodule
