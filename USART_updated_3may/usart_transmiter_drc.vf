////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : usart_transmiter_drc.vf
// /___/   /\     Timestamp : 05/11/2015 00:49:48
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.2\ISE_DS\ISE\bin\nt\unwrapped\sch2hdl.exe -intstyle ise -family spartan3e -verilog usart_transmiter_drc.vf -w E:/FPGA_Xilinx/USART_updated_3may/usart_transmiter.sch
//Design Name: usart_transmiter
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Reg_4bit_MUSER_usart_transmiter(CE, 
                                       CLEAR, 
                                       CLOCK, 
                                       I_0, 
                                       I_1, 
                                       I_2, 
                                       I_3, 
                                       O_0, 
                                       O_1, 
                                       O_2, 
                                       O_3);

    input CE;
    input CLEAR;
    input CLOCK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_11 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(CLOCK), 
                 .CE(CE), 
                 .CLR(CLEAR), 
                 .D(I_0), 
                 .Q(O_0));
endmodule
`timescale 1ns / 1ps

module Add_sub_4bit_MUSER_usart_transmiter(add_0, 
                                           I_0, 
                                           I_1, 
                                           I_2, 
                                           I_3, 
                                           O_0, 
                                           O_1, 
                                           O_2, 
                                           O_3);

    input add_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_52;
   wire XLXN_55;
   wire XLXN_57;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   
   XOR2  XLXI_1 (.I0(add_0), 
                .I1(I_3), 
                .O(XLXN_2));
   XOR2  XLXI_2 (.I0(add_0), 
                .I1(I_2), 
                .O(XLXN_3));
   XOR2  XLXI_3 (.I0(add_0), 
                .I1(I_1), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_52), 
               .O(XLXN_63));
   XOR2  XLXI_9 (.I0(add_0), 
                .I1(I_0), 
                .O(XLXN_52));
   XOR2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_64));
   XOR2  XLXI_15 (.I0(XLXN_2), 
                 .I1(XLXN_57), 
                 .O(XLXN_66));
   XOR2  XLXI_16 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_65));
   AND2  XLXI_34 (.I0(XLXN_3), 
                 .I1(XLXN_55), 
                 .O(XLXN_57));
   AND2  XLXI_35 (.I0(XLXN_4), 
                 .I1(XLXN_52), 
                 .O(XLXN_55));
   XOR2  XLXI_38 (.I0(add_0), 
                 .I1(XLXN_63), 
                 .O(O_0));
   XOR2  XLXI_39 (.I0(add_0), 
                 .I1(XLXN_64), 
                 .O(O_1));
   XOR2  XLXI_40 (.I0(add_0), 
                 .I1(XLXN_65), 
                 .O(O_2));
   XOR2  XLXI_41 (.I0(add_0), 
                 .I1(XLXN_66), 
                 .O(O_3));
endmodule
`timescale 1ns / 1ps

module decade_counter_new_MUSER_usart_transmiter(CE, 
                                                 CLEAR, 
                                                 CLK, 
                                                 OUT_f);

    input CE;
    input CLEAR;
    input CLK;
   output OUT_f;
   
   wire cllr;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_78;
   wire XLXN_106;
   wire XLXN_109;
   wire XLXN_110;
   wire XLXN_111;
   wire XLXN_113;
   wire XLXN_114;
   wire XLXN_122;
   wire XLXN_125;
   wire XLXN_126;
   wire XLXN_208;
   wire XLXN_209;
   wire OUT_f_DUMMY;
   
   assign OUT_f = OUT_f_DUMMY;
   Add_sub_4bit_MUSER_usart_transmiter  XLXI_1 (.add_0(XLXN_106), 
                                               .I_0(XLXN_109), 
                                               .I_1(XLXN_48), 
                                               .I_2(XLXN_49), 
                                               .I_3(XLXN_78), 
                                               .O_0(XLXN_113), 
                                               .O_1(XLXN_110), 
                                               .O_2(XLXN_111), 
                                               .O_3(XLXN_114));
   GND  XLXI_3 (.G(XLXN_106));
   NAND4  XLXI_45 (.I0(XLXN_109), 
                  .I1(XLXN_208), 
                  .I2(XLXN_209), 
                  .I3(XLXN_78), 
                  .O(OUT_f_DUMMY));
   INV  XLXI_46 (.I(XLXN_49), 
                .O(XLXN_209));
   Reg_4bit_MUSER_usart_transmiter  XLXI_49 (.CE(OUT_f_DUMMY), 
                                            .CLEAR(cllr), 
                                            .CLOCK(CLK), 
                                            .I_0(XLXN_113), 
                                            .I_1(XLXN_110), 
                                            .I_2(XLXN_111), 
                                            .I_3(XLXN_114), 
                                            .O_0(XLXN_109), 
                                            .O_1(XLXN_48), 
                                            .O_2(XLXN_49), 
                                            .O_3(XLXN_78));
   FD #( .INIT(1'b0) ) XLXI_50 (.C(CLK), 
               .D(XLXN_122), 
               .Q(XLXN_126));
   FD #( .INIT(1'b0) ) XLXI_51 (.C(CLK), 
               .D(CLEAR), 
               .Q(XLXN_122));
   INV  XLXI_52 (.I(XLXN_126), 
                .O(XLXN_125));
   AND2  XLXI_53 (.I0(XLXN_122), 
                 .I1(XLXN_125), 
                 .O(cllr));
   INV  XLXI_55 (.I(XLXN_48), 
                .O(XLXN_208));
   AND2  XLXI_56 (.I0(CE), 
                 .I1(OUT_f_DUMMY), 
                 .O(OUT_f_DUMMY));
endmodule
`timescale 1ns / 1ps

module Parity_gen_MUSER_usart_transmiter(I_0, 
                                         I_1, 
                                         I_2, 
                                         I_3, 
                                         I_4, 
                                         I_5, 
                                         I_6, 
                                         I_7, 
                                         PARITY);

    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
   output PARITY;
   
   wire XLXN_1;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(I_1), 
                .I1(I_0), 
                .O(XLXN_1));
   XOR2  XLXI_2 (.I0(I_3), 
                .I1(I_2), 
                .O(XLXN_7));
   XOR2  XLXI_3 (.I0(I_5), 
                .I1(I_4), 
                .O(XLXN_3));
   XOR2  XLXI_4 (.I0(I_7), 
                .I1(I_6), 
                .O(XLXN_6));
   XOR2  XLXI_5 (.I0(XLXN_7), 
                .I1(XLXN_1), 
                .O(XLXN_4));
   XOR2  XLXI_7 (.I0(XLXN_6), 
                .I1(XLXN_3), 
                .O(XLXN_10));
   XOR2  XLXI_8 (.I0(XLXN_10), 
                .I1(XLXN_4), 
                .O(PARITY));
endmodule
`timescale 1ns / 1ps

module bit10datareg_to_transmit_MUSER_usart_transmiter(CLK, 
                                                       I_0, 
                                                       I_1, 
                                                       I_2, 
                                                       I_3, 
                                                       I_4, 
                                                       I_5, 
                                                       I_6, 
                                                       I_7, 
                                                       Parity, 
                                                       S, 
                                                       Start_0, 
                                                       Stop, 
                                                       Serial_output);

    input CLK;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input Parity;
    input S;
    input Start_0;
    input Stop;
   output Serial_output;
   
   wire XLXN_70;
   wire XLXN_72;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_83;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_89;
   wire XLXN_91;
   wire XLXN_92;
   wire XLXN_94;
   wire XLXN_96;
   wire XLXN_97;
   wire XLXN_98;
   wire XLXN_99;
   wire XLXN_103;
   wire XLXN_120;
   wire XLXN_137;
   wire XLXN_153;
   
   MUXCY  XLXI_28 (.CI(XLXN_70), 
                  .DI(I_7), 
                  .S(S), 
                  .O(XLXN_80));
   MUXCY  XLXI_30 (.CI(XLXN_72), 
                  .DI(I_6), 
                  .S(S), 
                  .O(XLXN_86));
   MUXCY  XLXI_34 (.CI(XLXN_81), 
                  .DI(I_5), 
                  .S(S), 
                  .O(XLXN_85));
   MUXCY  XLXI_36 (.CI(XLXN_83), 
                  .DI(I_4), 
                  .S(S), 
                  .O(XLXN_98));
   MUXCY  XLXI_38 (.CI(XLXN_87), 
                  .DI(I_3), 
                  .S(S), 
                  .O(XLXN_91));
   MUXCY  XLXI_40 (.CI(XLXN_89), 
                  .DI(I_2), 
                  .S(S), 
                  .O(XLXN_97));
   MUXCY  XLXI_42 (.CI(XLXN_92), 
                  .DI(I_1), 
                  .S(S), 
                  .O(XLXN_96));
   MUXCY  XLXI_44 (.CI(XLXN_94), 
                  .DI(I_0), 
                  .S(S), 
                  .O(XLXN_120));
   MUXCY  XLXI_46 (.CI(XLXN_99), 
                  .DI(Start_0), 
                  .S(S), 
                  .O(XLXN_103));
   FD #( .INIT(1'b0) ) XLXI_60 (.C(CLK), 
               .D(XLXN_137), 
               .Q(XLXN_70));
   FD #( .INIT(1'b0) ) XLXI_61 (.C(CLK), 
               .D(XLXN_80), 
               .Q(XLXN_72));
   FD #( .INIT(1'b0) ) XLXI_62 (.C(CLK), 
               .D(XLXN_86), 
               .Q(XLXN_81));
   FD #( .INIT(1'b0) ) XLXI_63 (.C(CLK), 
               .D(XLXN_85), 
               .Q(XLXN_83));
   FD #( .INIT(1'b0) ) XLXI_64 (.C(CLK), 
               .D(XLXN_98), 
               .Q(XLXN_87));
   FD #( .INIT(1'b0) ) XLXI_65 (.C(CLK), 
               .D(XLXN_91), 
               .Q(XLXN_89));
   FD #( .INIT(1'b0) ) XLXI_66 (.C(CLK), 
               .D(XLXN_97), 
               .Q(XLXN_92));
   FD #( .INIT(1'b0) ) XLXI_67 (.C(CLK), 
               .D(XLXN_96), 
               .Q(XLXN_94));
   FD #( .INIT(1'b0) ) XLXI_68 (.C(CLK), 
               .D(XLXN_120), 
               .Q(XLXN_99));
   FD #( .INIT(1'b0) ) XLXI_69 (.C(CLK), 
               .D(XLXN_103), 
               .Q(Serial_output));
   FD #( .INIT(1'b0) ) XLXI_71 (.C(CLK), 
               .D(Stop), 
               .Q(XLXN_153));
   MUXCY  XLXI_72 (.CI(XLXN_153), 
                  .DI(Parity), 
                  .S(S), 
                  .O(XLXN_137));
endmodule
`timescale 1ns / 1ps

module usart_transmiter(CLK_Baud, 
                        CLR, 
                        Data, 
                        Enable, 
                        OUT_ser);

    input CLK_Baud;
    input CLR;
    input [7:0] Data;
    input Enable;
   output OUT_ser;
   
   wire decade_output;
   wire XLXN_42;
   wire XLXN_47;
   wire XLXN_54;
   wire XLXN_76;
   wire XLXN_77;
   
   GND  XLXI_8 (.G(XLXN_54));
   Parity_gen_MUSER_usart_transmiter  XLXI_9 (.I_0(Data[0]), 
                                             .I_1(Data[1]), 
                                             .I_2(Data[2]), 
                                             .I_3(Data[3]), 
                                             .I_4(Data[4]), 
                                             .I_5(Data[5]), 
                                             .I_6(Data[6]), 
                                             .I_7(Data[7]), 
                                             .PARITY(XLXN_42));
   VCC  XLXI_22 (.P(XLXN_47));
   bit10datareg_to_transmit_MUSER_usart_transmiter  XLXI_28 (.CLK(CLK_Baud), 
                                                            .I_0(Data[0]), 
                                                            .I_1(Data[1]), 
                                                            .I_2(Data[2]), 
                                                            .I_3(Data[3]), 
                                                            .I_4(Data[4]), 
                                                            .I_5(Data[5]), 
                                                            .I_6(Data[6]), 
                                                            .I_7(Data[7]), 
                                                            .Parity(XLXN_42), 
                                                            .S(decade_output), 
                                                            .Start_0(XLXN_54), 
                                                            .Stop(XLXN_47), 
                                                            
         .Serial_output(XLXN_77));
   VCC  XLXI_30 (.P(XLXN_76));
   MUXCY  XLXI_32 (.CI(XLXN_77), 
                  .DI(XLXN_76), 
                  .S(decade_output), 
                  .O(OUT_ser));
   decade_counter_new_MUSER_usart_transmiter  XLXI_35 (.CE(Enable), 
                                                      .CLEAR(CLR), 
                                                      .CLK(CLK_Baud), 
                                                      .OUT_f(decade_output));
endmodule
